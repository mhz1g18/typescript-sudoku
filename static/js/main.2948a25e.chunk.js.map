{"version":3,"sources":["redux/action-types/index.ts","redux/action-creators/index.ts","lib/sudoku.tsx","redux/reducers/sudokuReducer.ts","redux/reducers/index.ts","redux/store.ts","components/Board/Board.tsx","hooks/useKeyPress.tsx","components/navigation/Navbar.tsx","components/InputBoard/StopWatch.tsx","components/InputBoard/InputBoardWrapper.tsx","App.js","reportWebVitals.js","index.js"],"names":["ActionType","DIFFICULTY","createNewBoard","dispatch","type","NEW_GAME","resetBoard","RESET_GAME","solveBoard","SOLVE_GAME","changeDifficulty","diffuculty","CHANGE_DIFFICULTY","payload","placeInput","input","PLACE_INPUT","clearInput","CLEAR_INPUT","selectSquare","square","SELECT_SQUARE","undoInput","UNDO_INPUT","redoInput","REDO_INPUT","pauseGame","PAUSE_GAME","resumeGame","RESUME_GAME","difficultyMappings","EASY","MEDIUM","HARD","emptyBoard","Array","fill","map","r","generateRandomPuzzle","difficulty","min","max","randomFilledBoard","solve","cellIndexes","missingClues","lowerBoundMissingClues","upperBoundMissingClues","randomBound","Math","floor","random","i","length","j","push","cellIndexesShuffled","shuffle","pop","row","col","cellValue","solutions","console","log","board","countSolutions","returnAnimations","copyBoard","animations","solveHelper","classAdd","classRemove","digits","choice","digit","isValidMove","tryDigitsAtPosition","correct","iterations","array","copyArray","idx","randomIdx","colIdx","rowIdx","startRow","startCol","calcCol","initialState","initialBoard","Sudoku","inputs","selectedSquare","undoStack","redoStack","isPaused","sudokuReducer","state","action","newBoard","solvedBoard","val","oldVal","isValid","filteredInputs","filter","iRow","iCol","selectedRow","selectedCol","curValue","reducers","combineReducers","sudoku","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Board","key","useDispatch","bindActionCreators","actionCreators","useSelector","squareRefs","useRef","handleKeyPress","useCallback","Number","parseInt","useEffect","onKeyup","e","includes","addEventListener","removeEventListener","current","forEach","ref","classList","remove","refIdx","add","className","onClick","arrPos","selectedPos","handleSquareClick","data-x","data-y","data-section","useStyles","makeStyles","theme","createStyles","root","backgroundColor","boxShadow","maxWidth","appBar","paddingLeft","paddingRight","justifyContent","title","fontSize","userSelect","breakpoints","down","marginRight","menuButton","color","width","buttonText","marginLeft","display","menuItems","Navbar","classes","useState","anchorEl","setAnchorEl","handleClose","AppBar","position","Typography","variant","Button","event","currentTarget","Menu","keepMounted","id","open","Boolean","onClose","MenuItem","StopWatch","time","setTime","interval","clearInterval","setInterval","style","slice","icon","switchIcons","marginTop","InputBoardWrapper","pauseGameHandler","onClickHandler","num","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2948a25e.chunk.js","sourcesContent":["export enum ActionType {\r\n  NEW_GAME = \"NEW_GAME\",\r\n  RESET_GAME = \"RESET_GAME\",\r\n  SOLVE_GAME = \"SOLVE_GAME\",\r\n  PLACE_INPUT = \"PLACE_INPUT\",\r\n  CLEAR_INPUT = \"CLEAR_INPUT\",\r\n  SELECT_SQUARE = \"SELECT_SQUARE\",\r\n  CHANGE_DIFFICULTY = \"CHANGE_DIFFUCLTY\",\r\n  UNDO_INPUT = \"UNDO_INPUT\",\r\n  REDO_INPUT = \"REDO_INPUT\",\r\n  PAUSE_GAME = \"PAUSE_GAME\",\r\n  RESUME_GAME = \"RESUME_GAME\",\r\n}\r\n","import { DIFFICULTY } from \"./../../lib/sudoku\";\r\nimport { ActionType } from \"./../action-types/index\";\r\nimport { Action, Input } from \"./../actions/index\";\r\n// Action-creators - dispatch actions\r\n\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const createNewBoard = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.NEW_GAME,\r\n    });\r\n  };\r\n};\r\n\r\nexport const resetBoard = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.RESET_GAME,\r\n    });\r\n  };\r\n};\r\n\r\nexport const solveBoard = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.SOLVE_GAME,\r\n    });\r\n  };\r\n};\r\n\r\nexport const changeDifficulty = (diffuculty: DIFFICULTY) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.CHANGE_DIFFICULTY,\r\n      payload: diffuculty,\r\n    });\r\n  };\r\n};\r\n\r\nexport const placeInput = (input: Input) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.PLACE_INPUT,\r\n      payload: input,\r\n    });\r\n  };\r\n};\r\n\r\nexport const clearInput = (input: Input) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.CLEAR_INPUT,\r\n      payload: input,\r\n    });\r\n  };\r\n};\r\n\r\nexport const selectSquare = (square: number[]) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.SELECT_SQUARE,\r\n      payload: square,\r\n    });\r\n  };\r\n};\r\n\r\nexport const undoInput = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.UNDO_INPUT,\r\n    });\r\n  };\r\n};\r\n\r\nexport const redoInput = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.REDO_INPUT,\r\n    });\r\n  };\r\n};\r\n\r\nexport const pauseGame = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.PAUSE_GAME,\r\n    });\r\n  };\r\n};\r\n\r\nexport const resumeGame = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.RESUME_GAME,\r\n    });\r\n  };\r\n};\r\n","export enum DIFFICULTY {\r\n  EASY = \"EASY\",\r\n  MEDIUM = \"MEDIUM\",\r\n  HARD = \"HARD\",\r\n}\r\n\r\nconst difficultyMappings: {\r\n  [key in DIFFICULTY]: number[];\r\n} = {\r\n  EASY: [20, 30],\r\n  MEDIUM: [31, 40],\r\n  HARD: [41, 50],\r\n};\r\n\r\nconst emptyBoard: number[][] = new Array(9)\r\n  .fill(0)\r\n  .map((r) => new Array(9).fill(0));\r\n\r\nfunction genFullBoard(): number[][] {\r\n  return solve(emptyBoard);\r\n}\r\n\r\nfunction generateRandomPuzzle(difficulty: DIFFICULTY): number[][] {\r\n  const randomFilledBoard = genFullBoard();\r\n  const cellIndexes = [];\r\n\r\n  let missingClues = 0;\r\n  const [lowerBoundMissingClues, upperBoundMissingClues] =\r\n    difficultyMappings[difficulty];\r\n  const randomBound = getRandomInt(\r\n    lowerBoundMissingClues,\r\n    upperBoundMissingClues\r\n  );\r\n\r\n  // Populate Cell Indexes Array\r\n  for (let i = 0; i < randomFilledBoard.length; i++) {\r\n    for (let j = 0; j < randomFilledBoard[i].length; j++) {\r\n      cellIndexes.push([i, j, randomFilledBoard[i][j]]);\r\n    }\r\n  }\r\n\r\n  // Shuffle Cell Indexes\r\n  const cellIndexesShuffled = shuffle(10, cellIndexes);\r\n\r\n  while (cellIndexesShuffled.length > 25 && missingClues !== randomBound) {\r\n    const [row, col, cellValue] = cellIndexesShuffled.pop();\r\n    const solutions: number[][][] = [];\r\n    randomFilledBoard[row][col] = 0;\r\n    solve(randomFilledBoard, solutions, true);\r\n\r\n    if (solutions.length === 1) {\r\n      missingClues++;\r\n      continue;\r\n    } else {\r\n      missingClues--;\r\n      randomFilledBoard[row][col] = cellValue;\r\n    }\r\n  }\r\n  console.log(difficulty);\r\n  console.log(missingClues);\r\n\r\n  return randomFilledBoard;\r\n}\r\n\r\nexport function solve(\r\n  board: number[][],\r\n  solutions: number[][][] = [],\r\n  countSolutions = false,\r\n  returnAnimations = false\r\n): number[][] | any[] {\r\n  const copyBoard = [...board].map((row) => [...row]);\r\n  const animations: any[] = [];\r\n  solveHelper(copyBoard, 0, 0, solutions, countSolutions, animations);\r\n\r\n  return returnAnimations ? animations : copyBoard;\r\n}\r\n\r\nfunction solveHelper(\r\n  board: number[][],\r\n  row: number,\r\n  col: number,\r\n  solutions: number[][][],\r\n  countSolutions: boolean,\r\n  animations: any[]\r\n): boolean | undefined {\r\n  if (col === board[row].length) {\r\n    col = 0;\r\n    row += 1;\r\n\r\n    if (row === board.length) {\r\n      if (countSolutions) {\r\n        solutions.push(board);\r\n        return;\r\n      }\r\n      return true;\r\n    }\r\n  }\r\n\r\n  animations.push({\r\n    row,\r\n    col,\r\n    classAdd: [\"currentElement\"],\r\n    classRemove: [],\r\n  });\r\n\r\n  if (board[row][col] === 0) {\r\n    return tryDigitsAtPosition(\r\n      board,\r\n      row,\r\n      col,\r\n      solutions,\r\n      countSolutions,\r\n      animations\r\n    );\r\n  }\r\n\r\n  animations.push({\r\n    row,\r\n    col,\r\n    digit: board[row][col],\r\n    classAdd: [\"correctElement\"],\r\n    classRemove: [\"currentElement\"],\r\n  });\r\n\r\n  const correct = solveHelper(\r\n    board,\r\n    row,\r\n    col + 1,\r\n    solutions,\r\n    countSolutions,\r\n    animations\r\n  );\r\n\r\n  if (!correct) {\r\n    animations.push({\r\n      row,\r\n      col,\r\n      digit: board[row][col],\r\n      classAdd: [],\r\n      classRemove: [\"correctElement\"],\r\n    });\r\n  }\r\n\r\n  return correct;\r\n}\r\n\r\nfunction tryDigitsAtPosition(\r\n  board: number[][],\r\n  row: number,\r\n  col: number,\r\n  solutions: number[][][],\r\n  countSolutions: boolean,\r\n  animations: any[]\r\n) {\r\n  const digits = shuffle(10, [1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    const choice = digits[i];\r\n    animations.push({\r\n      row,\r\n      col,\r\n      classAdd: [\"currentElement\"],\r\n      classRemove: [],\r\n      digit: choice,\r\n    });\r\n    if (isValidMove(board, row, col, choice)) {\r\n      board[row][col] = choice;\r\n\r\n      const isValidMove = solveHelper(\r\n        board,\r\n        row,\r\n        col + 1,\r\n        solutions,\r\n        countSolutions,\r\n        animations\r\n      );\r\n\r\n      if (isValidMove && !countSolutions) {\r\n        animations.push({\r\n          row,\r\n          col,\r\n          classAdd: [\"correctElement\"],\r\n          classRemove: [\"currentElement\"],\r\n          digit: choice,\r\n        });\r\n        return true;\r\n      } else if (solutions.length > 2) {\r\n        return;\r\n      } else if (!isValidMove) {\r\n        animations.push({\r\n          row,\r\n          col,\r\n          digit: choice,\r\n          classAdd: [\"wrongElement\"],\r\n          classRemove: [\"currentElement\"],\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  animations.push({\r\n    row,\r\n    col,\r\n    classAdd: [],\r\n    classRemove: [\"currentElement\", \"wrongElement\"],\r\n    digit: 0,\r\n  });\r\n  board[row][col] = 0;\r\n  return false;\r\n}\r\n\r\nfunction getRandomInt(min: number, max: number): number {\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction shuffle(iterations = 1, array: any[]): any[] {\r\n  const copyArray = [...array];\r\n\r\n  for (let i = 0; i < iterations; i++) {\r\n    let idx = copyArray.length;\r\n\r\n    while (idx !== 0) {\r\n      // get a random int between [0, idx]\r\n      const randomIdx = Math.floor(Math.random() * idx);\r\n      idx--;\r\n\r\n      [copyArray[idx], copyArray[randomIdx]] = [\r\n        copyArray[randomIdx],\r\n        copyArray[idx],\r\n      ];\r\n    }\r\n  }\r\n\r\n  return copyArray;\r\n}\r\n\r\nfunction isValidMove(\r\n  board: number[][],\r\n  row: number,\r\n  col: number,\r\n  digit: number\r\n): boolean {\r\n  // Check Row\r\n  for (let colIdx = 0; colIdx < board[row].length; colIdx++) {\r\n    if (board[row][colIdx] === digit) return false;\r\n  }\r\n\r\n  // Check Col\r\n  for (let rowIdx = 0; rowIdx < board.length; rowIdx++) {\r\n    if (board[rowIdx][col] === digit) return false;\r\n  }\r\n\r\n  // Check quadrant\r\n  const startRow = Math.floor(row / 3) * 3;\r\n  const startCol = Math.floor(col / 3) * 3;\r\n\r\n  for (let rowIdx = 0; rowIdx < 3; rowIdx++) {\r\n    for (let colIdx = 0; colIdx < 3; colIdx++) {\r\n      const calcRow = startRow + rowIdx;\r\n      const calcCol = startCol + colIdx;\r\n\r\n      if (board[calcRow][calcCol] === digit) return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/* function prettyPrint(board: number[][]): void {\r\n  console.log(\"[\");\r\n  for (let i = 0; i < board.length; i++) {\r\n    let output = \"[ \";\r\n    for (let j = 0; j < board[i].length; j++) {\r\n      output += board[i][j];\r\n      output += j === board[i].length - 1 ? \" ]\" : \", \";\r\n    }\r\n    console.log(output);\r\n  }\r\n  console.log(\"]\");\r\n}\r\n\r\nfunction equalBoards(board1: any[], board2: any[]): boolean {\r\n  if (!Array.isArray(board1) && !Array.isArray(board2)) {\r\n    return board1 === board2;\r\n  }\r\n\r\n  if (board1.length !== board2.length) {\r\n    return false;\r\n  }\r\n\r\n  for (var i = 0, len = board1.length; i < len; i++) {\r\n    if (!equalBoards(board1[i], board2[i])) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n */\r\nexport { generateRandomPuzzle, isValidMove };\r\n","import { Input } from \"./../actions/index\";\r\nimport { ActionType } from \"./../action-types/index\";\r\nimport * as Sudoku from \"../../lib/sudoku\";\r\nimport { Action } from \"../actions\";\r\n\r\nconst emptyBoard: number[][] = new Array(9)\r\n  .fill(0)\r\n  .map(() => new Array(9).fill(0));\r\n\r\ninterface SudokuState {\r\n  board: number[][];\r\n  initialBoard: number[][];\r\n  difficulty: Sudoku.DIFFICULTY;\r\n  inputs: Input[];\r\n  selectedSquare: number[];\r\n  redoStack: Input[];\r\n  undoStack: Input[];\r\n  isPaused: boolean;\r\n}\r\n\r\nconst initialState: SudokuState = {\r\n  board: emptyBoard,\r\n  initialBoard: emptyBoard,\r\n  difficulty: Sudoku.DIFFICULTY.EASY,\r\n  inputs: [],\r\n  selectedSquare: [],\r\n  undoStack: [],\r\n  redoStack: [],\r\n  isPaused: false,\r\n};\r\n\r\nconst sudokuReducer = (state: SudokuState = initialState, action: Action) => {\r\n  if (state.isPaused && action.type !== ActionType.RESUME_GAME) {\r\n    return { ...state };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case ActionType.NEW_GAME: {\r\n      const newBoard = Sudoku.generateRandomPuzzle(state.difficulty);\r\n      return {\r\n        ...state,\r\n        board: newBoard,\r\n        initialBoard: newBoard,\r\n        inputs: [],\r\n      };\r\n    }\r\n    case ActionType.RESET_GAME: {\r\n      return {\r\n        ...state,\r\n        board: state.initialBoard,\r\n        inputs: [],\r\n        undoStack: [],\r\n        redoStack: [],\r\n      };\r\n    }\r\n    case ActionType.SOLVE_GAME: {\r\n      const solvedBoard = Sudoku.solve(state.initialBoard);\r\n      return {\r\n        ...state,\r\n        board: solvedBoard,\r\n        inputs: [],\r\n      };\r\n    }\r\n    case ActionType.CHANGE_DIFFICULTY: {\r\n      return {\r\n        ...state,\r\n        difficulty: action.payload,\r\n      };\r\n    }\r\n    case ActionType.PLACE_INPUT: {\r\n      const { row, col, val } = action.payload;\r\n\r\n      if (state.board[row][col] === val) {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n\r\n      const copyBoard = [...state.board].map((row) => [...row]);\r\n      const oldVal = copyBoard[row][col];\r\n\r\n      const isValid = Sudoku.isValidMove(copyBoard, row, col, val);\r\n      copyBoard[row][col] = val;\r\n\r\n      const filteredInputs = state.inputs.filter(\r\n        ({ row: iRow, col: iCol }: Input) => !(iRow === row && iCol === col)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        inputs: [...filteredInputs, { row, col, val, isValid }],\r\n        undoStack: [...state.undoStack, { row, col, val: oldVal, isValid }],\r\n        board: copyBoard,\r\n      };\r\n    }\r\n    case ActionType.CLEAR_INPUT: {\r\n      const { row, col } = action.payload;\r\n\r\n      if (state.board[row][col] === 0) {\r\n        return {\r\n          ...state,\r\n        };\r\n      }\r\n\r\n      const copyBoard = [...state.board].map((row) => [...row]);\r\n      copyBoard[row][col] = 0;\r\n\r\n      const filteredInputs = state.inputs.filter(\r\n        ({ row: iRow, col: iCol }: Input) => !(iRow === row && iCol === col)\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        board: copyBoard,\r\n        inputs: [...filteredInputs, { row, col, val: 0 }],\r\n      };\r\n    }\r\n    case ActionType.SELECT_SQUARE: {\r\n      const [row, col] = action.payload;\r\n      const [selectedRow, selectedCol] = state.selectedSquare;\r\n\r\n      return {\r\n        ...state,\r\n        selectedSquare:\r\n          row === selectedRow && col === selectedCol ? [] : [row, col],\r\n      };\r\n    }\r\n    case ActionType.UNDO_INPUT: {\r\n      const undoStack = [...state.undoStack];\r\n      const { row, col, val: oldVal, isValid } = undoStack.pop()!;\r\n      const copyBoard = [...state.board].map((row) => [...row]);\r\n\r\n      const inputs = [...state.inputs].map((input: Input) =>\r\n        input.row === row && input.col === col\r\n          ? {\r\n              row,\r\n              col,\r\n              val: oldVal,\r\n              isValid: Sudoku.isValidMove(copyBoard, row, col, oldVal),\r\n            }\r\n          : input\r\n      );\r\n\r\n      copyBoard[row][col] = oldVal;\r\n      const curValue = state.board[row][col];\r\n\r\n      return {\r\n        ...state,\r\n        board: copyBoard,\r\n        inputs: inputs,\r\n        undoStack: undoStack,\r\n        redoStack: [...state.redoStack, { row, col, val: curValue, isValid }],\r\n      };\r\n    }\r\n    case ActionType.REDO_INPUT: {\r\n      const redoStack = [...state.redoStack];\r\n      const { row, col, val: oldVal } = redoStack.pop()!;\r\n\r\n      const curValue = state.board[row][col];\r\n      const copyBoard = [...state.board].map((row) => [...row]);\r\n\r\n      const inputs = [...state.inputs].map((input: Input) =>\r\n        input.row === row && input.col === col\r\n          ? {\r\n              row,\r\n              col,\r\n              val: oldVal,\r\n              isValid: Sudoku.isValidMove(copyBoard, row, col, oldVal),\r\n            }\r\n          : input\r\n      );\r\n\r\n      copyBoard[row][col] = oldVal;\r\n\r\n      return {\r\n        ...state,\r\n        board: copyBoard,\r\n        redoStack: redoStack,\r\n        inputs: inputs,\r\n        undoStack: [...state.undoStack, { row, col, val: curValue }],\r\n      };\r\n    }\r\n    case ActionType.PAUSE_GAME: {\r\n      return {\r\n        ...state,\r\n        isPaused: true,\r\n      };\r\n    }\r\n    case ActionType.RESUME_GAME: {\r\n      return {\r\n        ...state,\r\n        isPaused: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default sudokuReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport sudokuReducer from \"./sudokuReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  sudoku: sudokuReducer,\r\n});\r\n\r\nexport default reducers;\r\n\r\nexport type State = ReturnType<typeof reducers>;\r\n","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst composeEnhancers =\r\n  (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(\r\n  reducers,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { FC, MouseEvent, useCallback, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport useKeypress from \"../../hooks/useKeyPress\";\r\nimport { actionCreators, State } from \"../../redux\";\r\nimport { Input } from \"../../redux/actions\";\r\n\r\nconst digitKeys: string = \"0123456789\";\r\n\r\ninterface BoardProps {}\r\n\r\nconst Board: FC<BoardProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const { createNewBoard, placeInput, clearInput, selectSquare } =\r\n    bindActionCreators(actionCreators, dispatch);\r\n  const { board, initialBoard, inputs, selectedSquare, isPaused } = useSelector(\r\n    (state: State) => state.sudoku\r\n  );\r\n\r\n  const squareRefs = useRef(new Array(81));\r\n\r\n  const handleSquareClick = (\r\n    e: MouseEvent<HTMLElement>,\r\n    rowIdx: number,\r\n    colIdx: number\r\n  ): void => {\r\n    if (initialBoard[rowIdx][colIdx] !== 0 || isPaused) return;\r\n\r\n    const arrPos: number = rowIdx * 9 + colIdx;\r\n\r\n    if (selectedSquare.length > 0) {\r\n      const selectedPos: number = selectedSquare[0] * 9 + selectedSquare[1];\r\n      squareRefs.current[selectedPos].classList.remove(\"box-selected\");\r\n\r\n      if (selectedPos === arrPos) {\r\n        selectSquare([rowIdx, colIdx]);\r\n        return;\r\n      }\r\n    }\r\n\r\n    selectSquare([rowIdx, colIdx]);\r\n    const ref: HTMLDivElement = squareRefs.current[arrPos];\r\n    ref.classList.add(\"box-selected\");\r\n  };\r\n\r\n  const handleKeyPress = useCallback(\r\n    ({ key }: any): void => {\r\n      const digit: number = Number.parseInt(key);\r\n\r\n      if (!(digit >= 0 && digit < 10) || selectedSquare.length === 0) {\r\n        return;\r\n      }\r\n\r\n      const [row, col] = selectedSquare;\r\n\r\n      if (digit === 0) {\r\n        clearInput({ row, col, val: digit });\r\n        return;\r\n      }\r\n\r\n      placeInput({\r\n        row,\r\n        col,\r\n        val: digit,\r\n      });\r\n    },\r\n    [selectedSquare, clearInput, placeInput]\r\n  );\r\n\r\n  useKeypress(digitKeys, handleKeyPress);\r\n\r\n  useEffect(() => {\r\n    createNewBoard();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (inputs.length === 0) {\r\n      squareRefs.current.forEach((ref) => {\r\n        ref.classList.remove(\"box-incorrect\");\r\n        ref.classList.remove(\"box-correct\");\r\n      });\r\n    }\r\n\r\n    inputs.forEach((input: Input) => {\r\n      const { row, col, val, isValid } = input;\r\n      const refIdx = row * 9 + col;\r\n      if (val === 0) {\r\n        squareRefs.current[refIdx].classList.remove(\"box-incorrect\");\r\n        squareRefs.current[refIdx].classList.remove(\"box-correct\");\r\n      } else if (isValid) {\r\n        squareRefs.current[refIdx].classList.remove(\"box-incorrect\");\r\n        squareRefs.current[refIdx].classList.add(\"box-correct\");\r\n      } else {\r\n        squareRefs.current[refIdx].classList.remove(\"box-correct\");\r\n        squareRefs.current[refIdx].classList.add(\"box-incorrect\");\r\n      }\r\n    });\r\n  }, [inputs]);\r\n\r\n  return (\r\n    <div className=\"board-wrapper\">\r\n      <div className=\"board\">\r\n        {board.map((row: number[], rowIdx: number) =>\r\n          row.map((col, colIdx) => (\r\n            <div\r\n              className=\"box-wrapper\"\r\n              key={`box-wrapper-${rowIdx}-${colIdx}`}\r\n              ref={(ref) => (squareRefs.current[rowIdx * 9 + colIdx] = ref)}\r\n              onClick={(e) => handleSquareClick(e, rowIdx, colIdx)}\r\n              data-x={rowIdx}\r\n              data-y={colIdx}\r\n              data-section={rowIdx}\r\n            >\r\n              <div className=\"box\">\r\n                <span>{col > 0 && col}</span>\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import { useEffect } from \"react\";\r\n\r\nexport default function useKeypress(key: string, action: any) {\r\n  useEffect(() => {\r\n    function onKeyup(e: any) {\r\n      if (e.key === key || key.includes(e.key)) action(e);\r\n    }\r\n    window.addEventListener(\"keyup\", onKeyup);\r\n    return () => window.removeEventListener(\"keyup\", onKeyup);\r\n  }, [key, action]);\r\n}\r\n","import { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport ToolBar from \"@material-ui/core/Toolbar\";\r\nimport {\r\n  Button,\r\n  createStyles,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators, State } from \"../../redux\";\r\nimport { DIFFICULTY } from \"../../lib/sudoku\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: \"rgba(0,0,0,0)\",\r\n      boxShadow: \"none\",\r\n      maxWidth: 600,\r\n    },\r\n    appBar: {\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      justifyContent: \"space-between\",\r\n    },\r\n    title: {\r\n      fontSize: \"24px\",\r\n      userSelect: \"none\",\r\n      [theme.breakpoints.down(500)]: {\r\n        fontSize: \"17px\",\r\n      },\r\n      [theme.breakpoints.down(330)]: {\r\n        fontSize: \"14px\",\r\n        paddingLeft: 0,\r\n        marginRight: 0,\r\n      },\r\n    },\r\n    menuButton: {\r\n      paddingLeft: 10,\r\n      marginRight: 5,\r\n      fontSize: \"17px\",\r\n      \"&:hover\": {\r\n        color: \"#ccc\",\r\n      },\r\n      [theme.breakpoints.down(500)]: {\r\n        fontSize: \"14px\",\r\n        paddingLeft: 0,\r\n        marginRight: 0,\r\n      },\r\n      [theme.breakpoints.down(330)]: {\r\n        fontSize: \"12px\",\r\n        paddingLeft: 0,\r\n        marginRight: 0,\r\n      },\r\n    },\r\n    difficulty: {\r\n      width: \"60px;\",\r\n      [theme.breakpoints.down(330)]: {\r\n        width: \"40px\",\r\n      },\r\n    },\r\n    buttonText: {\r\n      marginLeft: \"5px\",\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        display: \"none\",\r\n      },\r\n    },\r\n    menuItems: {\r\n      display: \"flex\",\r\n    },\r\n  })\r\n);\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { createNewBoard, resetBoard, solveBoard, changeDifficulty } =\r\n    bindActionCreators(actionCreators, dispatch);\r\n  const { difficulty } = useSelector((state: State) => state.sudoku);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = (difficulty: DIFFICULTY) => {\r\n    changeDifficulty(difficulty);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <AppBar className={classes.root} position=\"static\">\r\n      <ToolBar className={classes.appBar}>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          SuDoKu.\r\n        </Typography>\r\n        <div className={classes.menuItems}>\r\n          <Button\r\n            onClick={createNewBoard}\r\n            color=\"inherit\"\r\n            className={classes.menuButton}\r\n          >\r\n            New\r\n            <span className={classes.buttonText}> Game</span>\r\n          </Button>\r\n          <Button\r\n            onClick={resetBoard}\r\n            color=\"inherit\"\r\n            className={classes.menuButton}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            onClick={solveBoard}\r\n            color=\"inherit\"\r\n            className={classes.menuButton}\r\n          >\r\n            Solve\r\n          </Button>\r\n          <Button\r\n            onClick={handleClick}\r\n            color=\"inherit\"\r\n            className={classes.menuButton}\r\n          >\r\n            <span className={classes.difficulty}>{difficulty}</span>\r\n          </Button>\r\n\r\n          <Menu\r\n            keepMounted\r\n            id=\"simple-menu\"\r\n            anchorEl={anchorEl}\r\n            open={Boolean(anchorEl)}\r\n            onClose={handleClose}\r\n          >\r\n            <MenuItem onClick={() => handleClose(DIFFICULTY.EASY)}>\r\n              Easy\r\n            </MenuItem>\r\n            <MenuItem onClick={() => handleClose(DIFFICULTY.MEDIUM)}>\r\n              Medium\r\n            </MenuItem>\r\n            <MenuItem onClick={() => handleClose(DIFFICULTY.HARD)}>\r\n              Hard\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </ToolBar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { useEffect } from \"react\";\r\nimport { FC, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators, State } from \"../../redux\";\r\n\r\nconst StopWatch: FC = () => {\r\n  const [time, setTime] = useState<number>(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { pauseGame, resumeGame } = bindActionCreators(\r\n    actionCreators,\r\n    dispatch\r\n  );\r\n  const { isPaused } = useSelector((state: State) => state.sudoku);\r\n\r\n  useEffect(() => {\r\n    let interval: NodeJS.Timeout | null = null;\r\n\r\n    if (!isPaused) {\r\n      interval = setInterval(() => {\r\n        setTime((time) => time + 10);\r\n      }, 10);\r\n    } else {\r\n      interval && clearInterval(interval);\r\n    }\r\n\r\n    return () => {\r\n      if (interval !== null) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  }, [isPaused]);\r\n\r\n  return (\r\n    <span style={{ paddingLeft: \"1em\" }}>\r\n      Time: {(\"0\" + Math.floor((time / 60000) % 60)).slice(-2)}:\r\n      {(\"0\" + Math.floor((time / 1000) % 60)).slice(-2)}.{\" \"}\r\n      {(\"0\" + ((time / 10) % 100)).slice(-2)}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default StopWatch;\r\n","import { FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators, State } from \"../../redux\";\r\nimport UndoIcon from \"@material-ui/icons/Undo\";\r\nimport RedoIcon from \"@material-ui/icons/Redo\";\r\nimport DeleteIcon from \"@material-ui/icons/HighlightOff\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\nimport ResumeIcon from \"@material-ui/icons/PlayArrow\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport StopWatch from \"./StopWatch\";\r\n\r\nconst useStyles = makeStyles({\r\n  icon: {\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  switchIcons: {\r\n    marginTop: \"2px\",\r\n    \"&:hover\": {\r\n      color: \"red\",\r\n    },\r\n  },\r\n});\r\n\r\nconst InputBoardWrapper: FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const { placeInput, undoInput, redoInput, pauseGame, resumeGame } =\r\n    bindActionCreators(actionCreators, dispatch);\r\n\r\n  const { selectedSquare, undoStack, redoStack, isPaused } = useSelector(\r\n    (state: State) => state.sudoku\r\n  );\r\n\r\n  const pauseGameHandler = () => {\r\n    if (isPaused) {\r\n      resumeGame();\r\n    } else {\r\n      pauseGame();\r\n    }\r\n  };\r\n\r\n  const onClickHandler = (val: number) => {\r\n    if (selectedSquare.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const [row, col] = selectedSquare;\r\n    placeInput({\r\n      row,\r\n      col,\r\n      val,\r\n    });\r\n  };\r\n\r\n  const undoActionClickHandler = () => {\r\n    if (!undoStack.length) return;\r\n\r\n    undoInput();\r\n  };\r\n\r\n  const redoActionClickHandler = () => {\r\n    if (!redoStack.length) return;\r\n\r\n    redoInput();\r\n  };\r\n\r\n  return (\r\n    <div className=\"controls-wrapper\">\r\n      <div className=\"timer\">\r\n        <StopWatch />\r\n        <span style={{ paddingRight: \"1em\" }}>\r\n          {isPaused ? (\r\n            <ResumeIcon\r\n              className={classes.switchIcons}\r\n              onClick={pauseGameHandler}\r\n            />\r\n          ) : (\r\n            <PauseIcon\r\n              className={classes.switchIcons}\r\n              onClick={pauseGameHandler}\r\n            />\r\n          )}\r\n        </span>\r\n      </div>\r\n      <div className=\"pad\">\r\n        {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((num, idx) => (\r\n          <div\r\n            key={`control-${idx}`}\r\n            className=\"pad-item\"\r\n            onClick={(e) => onClickHandler(num)}\r\n          >\r\n            {num}\r\n          </div>\r\n        ))}\r\n        <div className=\"pad-item\" onClick={() => onClickHandler(0)}>\r\n          <DeleteIcon className={classes.icon} />\r\n        </div>\r\n        <div className=\"pad-item\" onClick={undoActionClickHandler}>\r\n          <UndoIcon\r\n            className={classes.icon}\r\n            color={!undoStack.length ? \"disabled\" : \"primary\"}\r\n          />\r\n        </div>\r\n        <div className=\"pad-item\" onClick={redoActionClickHandler}>\r\n          <RedoIcon\r\n            className={classes.icon}\r\n            color={!redoStack.length ? \"disabled\" : \"primary\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBoardWrapper;\r\n","import \"./App.css\";\nimport Board from \"./components/Board/Board\";\nimport { Container } from \"@material-ui/core\";\nimport Navbar from \"./components/navigation/Navbar\";\nimport InputBoardWrapper from \"./components/InputBoard/InputBoardWrapper\";\n\nfunction App() {\n  return (\n    <Container maxWidth=\"md\">\n      <Navbar />\n      <div className=\"game-wrapper\">\n        <Board />\n        <InputBoardWrapper />\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}